import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split

csv_url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data'
col_names =['Sepal_Length','Sepal_Width','Petal_Length','Petal_Width','Species']
iris = pd.read_csv(csv_url, names = col_names)

iris.head()

iris.isnull().any()

x = iris.iloc[:, :4].values
y = iris['Species'].values

X_train, X_test, y_train, y_test = train_test_split(x, y ,test_size =0.2)

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
scaler.fit(X_train)
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

from sklearn.naive_bayes import GaussianNB
gaussian = GaussianNB()
gaussian.fit(X_train, y_train)

Y_pred = gaussian.predict(X_test)
Y_pred

from sklearn.metrics import␣
 precision_score,confusion_matrix,accuracy_score,recall_score
accuracy = accuracy_score(y_test,Y_pred)
precision = precision_score(y_test, Y_pred,average='micro')
recall = recall_score(y_test, Y_pred,average='micro')
cm = confusion_matrix(y_test, Y_pred)

from sklearn.metrics import␣
 precision_score,confusion_matrix,accuracy_score,recall_score
accuracy = accuracy_score(y_test,Y_pred)
precision = precision_score(y_test, Y_pred,average='micro')
recall = recall_score(y_test, Y_pred,average='micro')
cm = confusion_matrix(y_test, Y_pred)

df = pd.DataFrame({'Real Values':y_test, 'Predicted Values':Y_pred})
df